---
swagger: '2.0'
host: api-staging.viki.net
basePath: /v4
securityDefinitions:
  ClientId:
    type: apiKey
    name: app
    in: query
    description: Register your application at the **Viki application dashboard**.You
      may use your normal Viki account or create a separate account to manage your
      applications. You will be granted a **Client ID** and a **Client Secret**.
  ClientSecret:
    type: apiKey
    name: secret
    in: header
  Token:
    type: apiKey
    name: token
    in: query
    description: ! '     Login a user to obtain a user access token.     **POST /v5/sessions.json**     *Params*       *
      username       * password     Example: `{\"username\": \"tyler\",\"password\":
      \"relyt\"}`     The returned value includes two fields: token and user. The
      token acts like a session id, and should be included in any subsequent user-specific
      requests via token=TOKEN. The user   field in general information about the
      user.'
info:
  description: ''
  version: '4.0'
  title: Container Vertical
  contact:
    name: platform@viki.com
schemes:
- http
- https
tags:
- name: Container Vertical
  description: Manage container verticals
paths:
  /container_verticals.json:
    get:
      security:
      - ClientId: []
      - ClientSecret: []
      tags:
      - Container Vertical
      summary: Get a list of container verticals
      operationId: getContainerVerticals
      parameters:
      - in: control the visibility of the countries field
        type: boolean
        name: use_countries
        required: false
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: ! '#/definitions/ContainerVerticalListResponse'
    post:
      security:
      - ClientId: []
      - ClientSecret: []
      - Token: []
      tags:
      - Container Vertical
      summary: Create a new container vertical
      operationId: createContainerVertical
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: "#/definitions/CreateContainerVertical"
      responses:
        201:
          description: Created
          schema:
            properties:
              id:
                type: string
        401:
          description: Unauthorized
          schema:
            $ref: ! '#/definitions/ContainerVerticalError'
  /container_verticals/{id}.json:
    get:
      security:
      - ClientId: []
      - ClientSecret: []
      - Token: []
      tags:
      - Container Vertical
      summary: Get a container vertical specific to id
      operationId: 
      produces:
      - application/json
      parameters:
      - in: path
        type: string
        name: id
        required: true
      - in: control the visibility of the countries field
        type: boolean
        name: use_countries
        required: false
      responses:
        200:
          description: OK
          schema:
            $ref: ! '#/definitions/ContainerVerticalListResponse'
        404:
          description: NotFound
          schema:
            $ref: ! '#/definitions/ContainerVerticalNotFound'
    put:
      security:
      - ClientId: []
      - ClientSecret: []
      - Token: []
      tags:
      - Container Vertical
      summary: Update a container vertical specific to id
      operationId: 
      produces:
      - application/json
      parameters:
      - in: path
        type: string
        name: id
        required: true
      - in: body
        name: body
        required: true
        schema:
          $ref: "#/definitions/CreateContainerVertical"
      responses:
        200:
          description: OK
          schema:
            $ref: ! '#/definitions/ContainerVerticalListResponse'
        404:
          description: NotFound
          schema:
            $ref: ! '#/definitions/ContainerVerticalNotFound'
        400:
          description: Bad Request
          schema:
            $ref: ! '#/definitions/ContainerVerticalError'
        401:
          description: Unauthorized
          schema:
            $ref: ! '#/definitions/ContainerVerticalError'
    delete:
      security:
      - ClientId: []
      - ClientSecret: []
      - Token: []
      tags:
      - Container Vertical
      summary: delete a container vertical specific to id
      operationId: 
      produces:
      - application/json
      parameters:
      - in: path
        type: string
        name: id
        required: true
      responses:
        200:
          description: OK
          type: object
          properties:
            ok: 
              type: boolean
            
definitions:
  CreateContainerVertical:
    title: ContainerVertical
    type: object
    properties:
      container_id:
        type: string
      vertical_id:
        type: string
      days_in:
        type: string
      days:
        type: string
      free:
        type: string
      countries:
        type: array
        items:
          type: string
  ContainerVerticalListResponse:
    title: ContainerVerticalList
    type: object
    properties:
      count:
        type: integer
      more:
        type: boolean
      response:
        type: array
        items:
          type: object
          properties:
            id: 
              type: string
            type: 
              type: string
            container_id:
              type: string
            vertical_id:
              type: string
            days:
              type: integer
            free:
              type: integer
            valid_from:
              type: string
              format: date-time
            valid_untill:
              type: string
              format: date-time
            countries:
              type: array
              items:
                type: string
  ContainerVerticalError:
    title: Error
    type: object
    properties:
      error:
        type: array
        items:
          type: string
      vcode:
        type: integer
  ContainerVerticalNotFound:
    title: Error
    type: object
    properties:
      error:
        type: string
      vcode:
        type: integer
